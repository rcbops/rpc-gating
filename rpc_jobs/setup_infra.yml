- job-template:
    name: "Setup-{app}"
    project-type: pipeline
    concurrent: false
    properties:
      - build-discarder:
          num-to-keep: 10
    parameters:
      - rpc_gating_params
    triggers:
      - timed: "{CRON}"
    dsl: |
      library "rpc-gating@${{RPC_GATING_BRANCH}}"
      common.globalWraps(){{
        try{{
          common.withRequestedCredentials("{credentials}"){{
            stage("Prepare Ansible Roles"){{
              // Getting the roles is a bit flaky sometimes, so we
              // implement a retry to improve the chances of success.
              retry(3){{
                common.venvGalaxy(
                  "install",
                  "-r ${{env.WORKSPACE}}/rpc-gating/role_requirements.yml",
                  "-p ${{env.WORKSPACE}}/roles"
                )
                common.venvGalaxy(
                  "install",
                  "-r ${{env.WORKSPACE}}/rpc-gating/{name_lower}/role_requirements.yml",
                  "-p ${{env.WORKSPACE}}/roles"
                )
              }}
            }} // stage

            stage("Prepare Environment"){{

              // write the clouds.yaml file
              env.OS_CLIENT_CONFIG_FILE = common.writeCloudsCfg()

              // Tell ansible where to find roles
              env.ANSIBLE_ROLES_PATH = "${{env.WORKSPACE}}/roles"

              // Tell ansible where the dynamic inventory is
              env.ANSIBLE_INVENTORY = "${{env.WORKSPACE}}/rpc-gating/scripts/ansible_v2_3_2_0_1_contrib_inventory_openstack.py"

              // Tell the dynamic inventory script to only use the 'public_cloud' cloud
              env.OS_CLOUD = "public_cloud"

              // Tell ansible where the ssh private key is
              env.ANSIBLE_PRIVATE_KEY_FILE = "${{env.JENKINS_SSH_PRIVKEY}}"

            }} // stage

            stage("Prepare Instances"){{
              dir('rpc-gating/playbooks'){{

                // Run the setup playbook
                common.venvPlaybook(
                  playbooks: [
                    "setup_openstack_instances.yml"
                  ],
                  args: [
                    "-v",
                    "-e '@${{env.WORKSPACE}}/rpc-gating/{name_lower}/instance_list.yml'"
                  ]
                ) //venvPlaybook

                // We need an inventory refresh, so we execute
                // this using a fresh shell instead of including
                // the playbooks in the previous ansible-playbook
                // play list.

                // Run the instance prep plays
                common.venvPlaybook(
                  playbooks: [
                    "drop_ssh_auth_keys.yml",
                    "slave_security.yml"
                  ],
                  args: [
                    "-v",
                    "-e target_hosts={name_lower}_server"
                  ]
                ) //venvPlaybook

              }} //dir
            }} // stage

            stage("Setup {app}"){{
              dir('rpc-gating/{name_lower}'){{

                // Run the setup playbook
                common.venvPlaybook(
                  playbooks: [
                    "setup_{name_lower}.yml"
                  ],
                  args: [
                    "-v"
                  ]
                ) //venvPlaybook
              }} //dir
            }} // stage
          }} //withCredentials
        }} catch (e) {{
          print(e)
          throw(e)
        }} finally {{
          common.archive_artifacts()
        }}
      }} // globalWraps

- project:
    name: 'Setup-Infra'
    CRON: "{CRON_DAILY}"
    RPC_GATING_BRANCH: "master"
    app:
      - Grafana:
          name_lower: "grafana"
          credentials: "id_rsa_cloud10_jenkins_file,RE_GRAFANA_ADMIN_PASSWORD,RE_GRAFANA_GRAFYAML_API_KEY"
      - Graphite:
          name_lower: "graphite"
          credentials: "id_rsa_cloud10_jenkins_file,RE_GRAPHITE_ADMIN_PASSWORD,RE_GRAPHITE_SECRET_KEY"
      - StatsD:
          name_lower: "statsd"
          credentials: "id_rsa_cloud10_jenkins_file"
      - Nodepool:
          name_lower: "nodepool"
          credentials: "id_rsa_cloud10_jenkins_file"
    jobs:
      - "Setup-{app}"

