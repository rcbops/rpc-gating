- job:
    name: RE-unit-test-withRequestedCredentials
    project-type: pipeline
    concurrent: true
    properties:
      - build-discarder:
          num-to-keep: 30
    parameters:
      - rpc_gating_params
    dsl: |
      library "rpc-gating@${RPC_GATING_BRANCH}"
      common.globalWraps{

        stage("Test valid credentials and bundles"){
          common.withRequestedCredentials("cloud_creds id_rsa_cloud10_jenkins_file"){
            sh """#!/bin/bash -xeu
              env |grep 'PUBCLOUD_USERNAME'
              env |grep 'PUBCLOUD_API_KEY'
              env |grep 'PUBCLOUD_TENANT_ID'
              env |grep 'JENKINS_SSH_PRIVKEY'
            """
          }
        }

        stage("Test empty credentials"){
          common.withRequestedCredentials(""){
            sh """#!/bin/bash -xeu
              ! env |grep 'PUBCLOUD_USERNAME'
              ! env |grep 'PUBCLOUD_API_KEY'
              ! env |grep 'PUBCLOUD_TENANT_ID'
              ! env |grep 'JENKINS_SSH_PRIVKEY'
            """
          }
          common.withRequestedCredentials(" "){
            sh """#!/bin/bash -xeu
              ! env |grep 'PUBCLOUD_USERNAME'
              ! env |grep 'PUBCLOUD_API_KEY'
              ! env |grep 'PUBCLOUD_TENANT_ID'
              ! env |grep 'JENKINS_SSH_PRIVKEY'
            """
          }
        }

        stage("Test Invalid Credentials"){
          try{
            common.withRequestedCredentials("invalid_credential_id"){
              sh "echo 'This echo should not be executed'"
            }
            throw new Exception("Invalid Credentials Test Failure")
          } catch (Exception e){
            if (e.message =~ /Attempt to use unknown credential/){
              print ("Invalid Credentials Test Pass: ${e}")
            } else {
              throw new Exception("Invalid Credentials Check Failed: ${e}")
            }
          }
        }

      } // shared slave
