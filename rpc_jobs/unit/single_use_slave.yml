- job:
    name: RE-unit-test-slave-types
    project-type: workflow
    concurrent: true
    properties:
      - build-discarder:
          num-to-keep: 30
    parameters:
      # Default params are provided by macro, add any extra params, or
      # params you want to override the defaults for.
      - instance_params:
          IMAGE: "Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)"
          FLAVOR: "performance1-1"
          REGIONS: "DFW ORD"
          FALLBACK_REGIONS: "IAD"
      - rpc_gating_params
      - standard_job_params:
          SLAVE_TYPE: "instance"
          SLAVE_CONTAINER_BASE_IMAGE: "ubuntu:16.04"
      - string:
          name: STAGES
          default: "Allocate Resources, Connect Slave, Cleanup, Destroy Slave"
          description: |
            Pipeline stages to run CSV. Note that this list does not influence execution order.
            Options:
              Allocate Resources
              Connect Slave
              Pause (use to hold instance for investigation before cleanup)
              Cleanup
              Destroy Slave
    dsl: |
      library "rpc-gating@${RPC_GATING_BRANCH}"
      common.globalWraps(){
        common.standard_job_slave(env.SLAVE_TYPE){
          String inside_container = sh(script: """#!/bin/bash
            test -f /.dockerenv && echo "yes" || echo "no"
          """, returnStdout: true).trim()

          String distro = sh(script: """#!/bin/bash
            source /etc/lsb-release
            echo \${DISTRIB_RELEASE}
          """, returnStdout: true).trim()

          sh """
            echo "I'm an Ubuntu ${distro} ${env.SLAVE_TYPE} slave"
          """

          // NOTE(mattt): If env.SLAVE_TYPE is set to an unrecognized type, an
          // exception will be raised in common.standard_job_slave()
          stage("Ensure virt type matches env.SLAVE_TYPE") {
            if (env.SLAVE_TYPE == "instance") {
              assert inside_container == "no"
            } else {
              assert inside_container == "yes"
            } // if
          } // stage

          stage("Ensure container distro matches env.SLAVE_CONTAINER_BASE_IMAGE") {
            if (env.SLAVE_TYPE == "container") {
                assert distro == env.SLAVE_CONTAINER_BASE_IMAGE.split(":")[1]
            } else {
              print 'Skipped as env.SLAVE_TYPE != "container"'
            } // if
          } // stage
        } // standard_job_slave
      } // globalWraps
