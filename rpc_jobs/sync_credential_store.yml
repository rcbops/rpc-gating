- job:
    name: 'Sync-Credential-Store'
    project-type: workflow
    concurrent: false
    properties:
      - build-discarder:
          days-to-keep: 360
    parameters:
      - rpc_gating_params
      - string:
          name: "PWSAFE_PROJECT_ID"
          description: |
            PasswordSafe Project ID
      - password:
          name: "SSO_USERNAME"
          description: |
            SSO username to connect to PasswordSafe with
      - password:
          name: "SSO_PASSWORD"
          description: |
            SSO password to connect to PasswordSafe with
      - password:
          name: "PIP_PWSAFE_LOCATION"
          description: |
            pip location to install pwsafe library from,
            eg. git+ssh://git@repo_url/user/pwsafe.git

    dsl: |
      library "rpc-gating@${RPC_GATING_BRANCH}"
      common.globalWraps(){
        common.internal_slave(){
          withCredentials([
            file(
              credentialsId: 'service_account_jenkins_ssh_key',
              variable: 'JENKINS_SSH_KEY'
            )
          ]){
            dir("rpc-gating/scripts"){
              TMP_DIR = pwd(tmp:true)
              withEnv([
                "TMP_DIR=${TMP_DIR}",
                "PWSAFE_PROJECT_ID=${PWSAFE_PROJECT_ID}",
                "JENKINS_URL=${JENKINS_URL}",
                "JENKINS_SSH_KEY=${JENKINS_SSH_KEY}",
                "SSO_USERNAME=${SSO_USERNAME}",
                "SSO_PASSWORD=${SSO_PASSWORD}"])
              {
                sshagent (credentials: ['rpc-jenkins-svc-github-key']) {
                  sh """#!/bin/bash
                    scl enable python27 bash

                    if [[ ! -d ".venv" ]]; then
                        virtualenv -p /opt/rh/python27/root/usr/bin/python .venv
                    fi
                    set +x; source .venv/bin/activate; set -x

                    pip install ${PIP_PWSAFE_LOCATION}
                    pip install functools32

                    if [[ ! -f "jenkins-cli.jar" ]]; then
                        wget ${JENKINS_URL}/jnlpJars/jenkins-cli.jar
                    fi

                    python pull_passwords.py
                  """
                } // sshagent
              } // withEnv
            } // dir
          } // withCred
        } // CIT slave node
      } // globalWraps
