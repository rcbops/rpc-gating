- job:
    name: 'OnMetal_Multi_Node_AIO'
    project-type: workflow
    build-discarder:
        days-to-keep: 30
    concurrent: true
    parameters:
      - rpc_gating_params
      - rpc_params
      - tempest_params
      - string:
          name: OSA_OPS_REPO
          default: https://github.com/openstack/openstack-ansible-ops
      - string:
          name: OSA_OPS_BRANCH
          default: master
      - string:
          name: REGION
          default: "IAD"
      - string:
          name: FLAVOR
          default: "onmetal-io1"
      - string:
          name: IMAGE
          default: "OnMetal - Ubuntu 14.04 LTS (Trusty Tahr)"
      - string:
          name: INSTANCE_NAME
          default: AUTO
          description: |
            Set instance name or "AUTO" to have it generated based on job
            name and build number. Beware the 63 char container name limit
            as container names includes the host name.
      - string:
          name: OPENSTACK_ANSIBLE_BRANCH
          default: stable/newton
          description: Openstack Ansible branch to use in setup
      - string:
          name: DEFAULT_IMAGE
          description: Version of Ubuntu image to use for VMs (14.04.5 or 16.04.2)
          default: '16.04.2'
      - bool:
          name: PARTITION_HOST
          default: true
          description: Enable partitioning of host data disk device
      - string:
          name: STAGES
          default: |
            Allocate Resources, Connect Slave, Prepare Multi-Node AIO, Prepare RPC Configs,
             Deploy RPC w/ Script, Install Tempest, Tempest Tests, Prepare Horizon Selenium,
             Horizon Tests, Prepare Kibana Selenium, Kibana Tests, Cleanup
          description: |
            Pipeline stages to run CSV. Note that this list does not influence execution order.
            Options:
              Allocate Resources
              Connect Slave
              Prepare Multi-Node AIO
              Prepare RPC Configs
              Deploy RPC w/ Script
              Install Tempest
              Tempest Tests
              Prepare Horizon Selenium
              Horizon Tests
              Prepare Kibana Selenium
              Kibana Tests
              Pause (use to hold instance for investigation before cleanup)
              Cleanup

    dsl: |
      node(){
        try {
          dir("rpc-gating"){
            git branch: env.RPC_GATING_BRANCH, url: env.RPC_GATING_REPO
          }
          instance_name = common.gen_instance_name()
          pubCloudSlave.getPubCloudSlave(instance_name: instance_name)

          node(instance_name){
            multi_node_aio_prepare.prepare()
            deploy.deploy_sh(
              environment_vars: [
                "FORKS=10",
                "DEPLOY_HAPROXY=yes",
                "DEPLOY_ELK=yes",
                "DEPLOY_TEMPEST=no",
                "DEPLOY_AIO=no",
                "DEPLOY_MAAS=no"
                ]
            ) // deploy_sh
            tempest.tempest(vm: "infra1")
            horizon.horizon_integration()
            kibana.kibana()
          }// public cloud node
        } catch (e){
            currentBuild.result = 'FAILURE'
            throw e
        } finally {
            pubCloudSlave.delPubCloudSlave(instance_name: instance_name)
        }
      } // cit node
